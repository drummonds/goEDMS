#goEDMS will look for serverConfig.toml in root or in the config/ directory (if it exists)
[serverConfig]
    ServerPort = "8000" #Required to input as string
    ServerAddr = "" #Put in the IP address you want to bind to as string, if blank will bind to all available addresses
    APIURL = "" #This is for EXTREME edge cases where you want to manually force the API URL, like with Docker, usually leave blank

[database]
    # Database type: "postgres" or "cockroachdb"
    # For development, use the -dev flag to run with ephemeral PostgreSQL (no configuration needed)
    Type = "postgres"

    # Option 1: Use a full connection string
    # Example: "host=localhost port=5432 user=goedms password=goedms dbname=goedms sslmode=disable"
    # For CockroachDB: "host=localhost port=26257 user=goedms password=goedms dbname=goedms sslmode=require"
    ConnectionString = ""

    # Option 2: Use individual connection parameters (will be ignored if ConnectionString is set)
    # These are especially useful when using .env files for local development
    # Copy .env.example to .env and set GOEDMS_DATABASE_* variables
    Host = ""
    Port = ""
    User = ""
    Password = ""
    Name = ""
    SSLMode = ""

[documentLibrary]     #Relative or absolute path accepted, the server will convert any relative path to an absolute path.
    DocumentFileSystemLocation = 'documents' #Location to store documents
    DefaultNewDocumentFolder = 'New' #default folder that ingressed documents will be placed in (inside the Document library), for multiple folders deep can do '2020/New'

[ingress]
    IngressPath = 'ingress' #default path that the server will scan for new documents
    [ingress.scheduling]
        #number of minutes between scans of the ingress folder
        IngressInterval = 10
    [ingress.completed]
        #If True will delete files from ingress folder after processed (will leave ones if they produce error), if false will move to another folder
        IngressDeleteOnProcess = false
        IngressMoveFolder = 'done' #default path that the server will move processed ingress documents to
    [ingress.handling]
        PreserveDirStructure = true #if nested folders are in the ingress path will copy that existing structure to document storage

[ocr]
    #Path to Tesseract binary (optional for OCR) #Windows paths need to be formatted as such: "C:\\Program Files\\Tesseract-OCR\\tesseract.exe"
    TesseractBin = "/usr/bin/tesseract"

[authentication]
    WebUIAuth = false # bool, if false no authentication is required for the webUI
    WebUIUser = "admin"
    WebUIPassword = "Password1"

[reverseProxy]
    #This is for setting up goEDMS behind a reverse Proxy (with SSL), as a subdomain route (https://goedms.domain.com)
    ProxyEnabled = false #bool, either false or true
    #URL is CASE SENSITIVE # MUST be in the subdomain format, NO trailing slash (suburl proxy does not work, i.e. https://domain.com/goedms)
    BaseURL = "https://goedms.domain.org"

[frontend]
    NewDocumentNumber = 5 # number of new documents to fetch to view

[logging]
    Level = "debug" #debug, info, warn, error, fatal
    OutputPath = "file" #file or stdout
    LogFileLocation = "goedms.log"

[notifications]
    PushBulletToken = "" #add your pushbullet api token here to notify of ingress completion to pushbullet
